<?php
/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

$pllx_options_defaults = [
	'language_behavior_0' =>  'all',
	'forced_languages_1' => 'en',
	'use_current_language_2' => 'use_current_language_2',
	'custom_post_types_3' => 'post,page'
];

class LanguageMix {
	private $language_mix_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'language_mix_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'language_mix_page_init' ) );
	}

	public function language_mix_add_plugin_page() {
		add_options_page(
			__('Language Mix', 'language-mix'), // page_title
			__('Language Mix', 'language-mix'), // menu_title
			'manage_options', // capability
			'language-mix', // menu_slug
			array( $this, 'language_mix_create_admin_page' ) // function
		);
	}

	public function language_mix_create_admin_page() {
		$this->language_mix_options = get_option( 'language_mix_option_name' ); ?>

		<div class="wrap">
			<h2>Language Mix</h2>
			<p></p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'language_mix_option_group' );
					do_settings_sections( 'language-mix-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function language_mix_page_init() {
		global $pllx_options_defaults;

		register_setting(
			'language_mix_option_group', // option_group
			'language_mix_option_name', // option_name
            [
                'sanitize_callback' => array( $this, 'language_mix_sanitize' ), 
                'default' => $pllx_options_defaults,
            ]
		);

		add_settings_section(
			'language_mix_setting_section', // id
			__('Settings', 'language-mix'), // title
			array( $this, 'language_mix_section_info' ), // callback
			'language-mix-admin' // page
		);

		add_settings_field(
			'language_behavior_0', // id
			__('Language behavior', 'language-mix'), // title
			array( $this, 'language_behavior_0_callback' ), // callback
			'language-mix-admin', // page
			'language_mix_setting_section' // section
		);

		add_settings_field(
			'forced_languages_1', // id
			__('Forced languages', 'language-mix'), // title
			array( $this, 'forced_languages_1_callback' ), // callback
			'language-mix-admin', // page
			'language_mix_setting_section' // section
		);

		add_settings_field(
			'use_current_language_2', // id
			__('Use current language', 'language-mix'), // title
			array( $this, 'use_current_language_2_callback' ), // callback
			'language-mix-admin', // page
			'language_mix_setting_section' // section
		);

		add_settings_field(
			'custom_post_types_3', // id
			__('Custom post types', 'language-mix'), // title
			array( $this, 'custom_post_types_3_callback' ), // callback
			'language-mix-admin', // page
			'language_mix_setting_section' // section
		);
	}

	public function language_mix_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['language_behavior_0'] ) ) {
			$sanitary_values['language_behavior_0'] = $input['language_behavior_0'];
		}

		if ( isset( $input['forced_languages_1'] ) ) {
			$sanitary_values['forced_languages_1'] = sanitize_text_field( $input['forced_languages_1'] );
		}

		if ( isset( $input['use_current_language_2'] ) ) {
			$sanitary_values['use_current_language_2'] = $input['use_current_language_2'];
		}

		if ( isset( $input['custom_post_types_3'] ) ) {
			$sanitary_values['custom_post_types_3'] = sanitize_text_field( $input['custom_post_types_3'] );
		}

		return $sanitary_values;
	}

	public function language_mix_section_info() {
		
	}

	public function language_behavior_0_callback() {
		?> <fieldset><?php $checked = ( isset( $this->language_mix_options['language_behavior_0'] ) && $this->language_mix_options['language_behavior_0'] === 'all' ) ? 'checked' : '' ; ?>
		<label for="language_behavior_0-0"><input type="radio" name="language_mix_option_name[language_behavior_0]" id="language_behavior_0-0" value="all" <?php echo $checked; ?>> <?php echo __('All languages', 'language-mix'); ?></label><br>
		<?php $checked = ( isset( $this->language_mix_options['language_behavior_0'] ) && $this->language_mix_options['language_behavior_0'] === 'browser' ) ? 'checked' : '' ; ?>
		<label for="language_behavior_0-1"><input type="radio" name="language_mix_option_name[language_behavior_0]" id="language_behavior_0-1" value="browser" <?php echo $checked; ?>> <?php echo __('Only the languages allowed by the browser', 'language-mix'); ?></label><br>
		<?php $checked = ( isset( $this->language_mix_options['language_behavior_0'] ) && $this->language_mix_options['language_behavior_0'] === 'override' ) ? 'checked' : '' ; ?>
		<label for="language_behavior_0-2"><input type="radio" name="language_mix_option_name[language_behavior_0]" id="language_behavior_0-2" value="override" <?php echo $checked; ?>> <?php echo __('The languages allowed by the browser plus the ones that are forced', 'language-mix'); ?></label></fieldset> <?php
	}

	public function forced_languages_1_callback() {
		printf(
			'<input class="regular-text" type="text" name="language_mix_option_name[forced_languages_1]" id="forced_languages_1" value="%s">',
			isset( $this->language_mix_options['forced_languages_1'] ) ? esc_attr( $this->language_mix_options['forced_languages_1']) : ''
		);
	}

	public function use_current_language_2_callback() {
		printf(
			'<input type="checkbox" name="language_mix_option_name[use_current_language_2]" id="use_current_language_2" value="use_current_language_2" %s> <label for="use_current_language_2">' . __('Allow always the current language with higher priority', 'language-mix') . '</label>',
			( isset( $this->language_mix_options['use_current_language_2'] ) && $this->language_mix_options['use_current_language_2'] === 'use_current_language_2' ) ? 'checked' : ''
		);
	}

	public function custom_post_types_3_callback() {
		printf(
			'<input class="regular-text" type="text" name="language_mix_option_name[custom_post_types_3]" id="custom_post_types_3" value="%s">',
			isset( $this->language_mix_options['custom_post_types_3'] ) ? esc_attr( $this->language_mix_options['custom_post_types_3']) : ''
		);
	}

}
if ( is_admin() )
	$language_mix = new LanguageMix();

/* 
 * Retrieve this value with:
 * $language_mix_options = get_option( 'language_mix_option_name' ); // Array of All Options
 * $language_behavior_0 = $language_mix_options['language_behavior_0']; // Language behavior
 * $forced_languages_1 = $language_mix_options['forced_languages_1']; // Forced languages
 * $use_current_language_2 = $language_mix_options['use_current_language_2']; // Use current language
 * $custom_post_types_3 = $language_mix_options['custom_post_types_3']; // Custom post types
 */
